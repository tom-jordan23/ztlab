events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    # Proxy configuration for Secure Web Gateway
    upstream backend_corporate {
        server corporate-app-1:80;
        server corporate-app-2:80;
    }

    # Main web interface
    server {
        listen       443 ssl default_server;
        server_name  localhost;

        # Self-signed SSL certificate (for demo purposes)
        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /admin {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /admin.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    # Proxy server for secure web gateway functionality
    server {
        listen       3128;
        server_name  proxy.sase.local;

        # Basic proxy functionality
        location / {
            proxy_pass http://backend_corporate;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        }

        # Block certain URLs (basic web filtering)
        location ~* \.(exe|msi|bat|cmd|scr|pif|jar)$ {
            return 403 "File type blocked by security policy";
        }

        # Malware/phishing simulation blocks
        location /malware {
            return 403 "Access denied: Malware detected";
        }

        location /phishing {
            return 403 "Access denied: Phishing attempt blocked";
        }
    }
}

# Stream configuration for TCP/UDP proxying
stream {
    log_format proxy '$remote_addr [$time_local] '
                     '$protocol $status $bytes_sent $bytes_received '
                     '$session_time "$upstream_addr"';

    access_log /var/log/nginx/stream_access.log proxy;

    # SSH proxy example
    upstream ssh_backend {
        server corporate-app-1:22;
    }

    server {
        listen 2200;
        proxy_pass ssh_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}